# API for basejump package

## Exported functions

assignMultiple(..., envir = parent.frame(), prefix = NULL)
bioc(pkgs = NULL, ...)
camel(character)
clearWarnings()
clear_warnings()
comp(dna)
createProjDirs()
create_proj_dirs()
detectHPC()
detect_hpc()
firstCase(character)
first_case(character)
fixNA(string)
fix_na(string)
grepString(identifier)
grep_string(identifier)
import_tidy_verbs(envir = parent.frame())
kables(list, captions = NULL)
loadDataRaw(data)
loadRemote(url)
load_data_raw(data)
load_remote(url)
logRatioToFoldChange(logRatio, base = 2)
log_ratio_to_fold_change(logRatio, base = 2)
makeNames(character)
makeNamesCamel(character)
makeNamesSnake(character)
make_names(character)
make_names_camel(character)
make_names_snake(character)
mdList(character, ordered = FALSE)
md_list(character, ordered = FALSE)
packageProj(install = FALSE, test = FALSE)
package_proj(install = FALSE, test = FALSE)
pct(number)
readDataRaw()
readYAML(yaml_file)
read_data_raw()
read_yaml(yaml_file)
renderProj(outputDir = file.path("docs", Sys.Date()), recursive = FALSE)
render_proj(outputDir = file.path("docs", Sys.Date()), recursive = FALSE)
revcomp(dna)
sanitiseNames(object)
sanitise_names(object)
sanitizeNames(object)
sanitize_names(object)
saveData(..., dir = "data")
saveDataRaw(...)
save_data(..., dir = "data")
save_data_raw(...)
setColnames(x, value)
setNamesCamel(object)
setNamesDot(object)
setNamesSnake(object)
setRownames(x, value)
set_names_camel(object)
set_names_dot(object)
set_names_snake(object)
snake(character)
sortUnique(vector)
sort_unique(vector)
titleCase(character)
title_case(character)
toStringSortUnique(x)
toStringSummarise(data)
toStringSummarize(data)
toStringUnique(x)
transmit(remoteDir, pattern = NULL, rename = NULL, compress = FALSE, localDir = "data-raw")
wash(df)

## Exported data

globals: character (character[6])
starwars: tbl_df, tbl, data.frame (list[13])
