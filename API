# API for basejump package

## Exported functions

assignMultiple(..., envir = parent.frame(), prefix = NULL)
assign_multiple(..., envir = parent.frame(), prefix = NULL)
bioc(pkgs = NULL, ...)
camel(x)
clearWarnings()
clear_warnings()
comp(dna)
createProjectDirs()
create_project_dirs()
detectHPC()
detect_hpc()
dotNotation(x)
dot_notation(x)
firstCase(x)
first_case(x)
fixNA(string)
fix_na(string)
grepString(identifier)
grep_string(identifier)
importTidyVerbs(envir = parent.frame())
import_tidy_verbs(envir = parent.frame())
kables(list, captions = NULL)
loadData(...)
loadRemote(url)
load_data(...)
load_remote(url)
logRatioToFoldChange(logRatio, base = 2)
log_ratio_to_fold_change(logRatio, base = 2)
mdList(character, ordered = FALSE)
md_list(character, ordered = FALSE)
packageProject(install = FALSE, test = FALSE)
package_project(install = FALSE, test = FALSE)
pct(number)
readDataRaw()
readYAML(yaml_file)
read_data_raw()
read_yaml(yaml_file)
removeNA(x)
remove_na(x)
renderProject(outputDir = file.path("docs", Sys.Date()), recursive = FALSE)
render_project(outputDir = file.path("docs", Sys.Date()), recursive = FALSE)
revcomp(dna)
sanitiseNames(x)
sanitise_names(x)
sanitizeNames(x)
sanitize_names(x)
saveData(..., dir = "data")
saveDataRaw(...)
save_data(..., dir = "data")
save_data_raw(...)
setColnames(x, value)
setRownames(x, value)
snake(x)
sortUnique(vector)
sort_unique(vector)
titleCase(x)
title_case(x)
toStringSortUnique(x)
toStringSummarise(data)
toStringSummarize(data)
toStringUnique(x)
to_string_sort_unique(x)
to_string_summarise(data)
to_string_summarize(data)
to_string_unique(x)
transmit(remoteDir, pattern = NULL, rename = NULL, compress = FALSE, localDir = "data-raw")
wash(df)

## Exported data

globals: character (character[6])
starwars: tbl_df, tbl, data.frame (list[13])
