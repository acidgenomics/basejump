# API for basejump package

## Exported functions

arrange(object, ...)
assignMultiple(..., envir = parent.frame(), prefix = NULL)
assign_multiple(..., envir = parent.frame(), prefix = NULL)
bioc(pkgs = NULL, ...)
camel(x)
clearWarnings()
clear_warnings()
comp(dna)
createProjectDirs()
create_project_dirs()
detectHPC()
detect_hpc()
dotNotation(x)
dot_notation(x)
filter(object, ...)
firstCase(x)
first_case(x)
fixNA(string)
fix_na(string)
grepString(identifier)
grep_string(identifier)
kables(list, captions = NULL)
loadData(...)
loadRemote(url)
load_remote(url)
logRatioToFoldChange(logRatio, base = 2)
log_ratio_to_fold_change(logRatio, base = 2)
mdList(character, ordered = FALSE)
md_list(character, ordered = FALSE)
mutate(object, ...)
packageProject(install = FALSE, test = FALSE)
package_project(install = FALSE, test = FALSE)
pct(number)
readDataRaw()
readYAML(yaml_file)
read_data_raw()
read_yaml(yaml_file)
removeNA(x)
remove_na(x)
renderProject(outputDir = file.path("docs", Sys.Date()), recursive = FALSE)
render_project(outputDir = file.path("docs", Sys.Date()), recursive = FALSE)
revcomp(dna)
sanitiseNames(x)
sanitise_names(x)
sanitizeNames(x)
sanitize_names(x)
saveData(..., dir = "data")
saveDataRaw(...)
save_data(..., dir = "data")
save_data_raw(...)
setColnames(x, value)
setRownames(x, value)
snake(x)
sortUnique(vector)
sort_unique(vector)
summariseRows(x, sep = ", ")
summarise_rows(x, sep = ", ")
summarizeRows(x, sep = ", ")
summarize_rows(x, sep = ", ")
tidy_select(.data, ...)
titleCase(x)
title_case(x)
toStringSortUnique(x, sep = ", ")
toStringUnique(x, sep = ", ")
to_string_sort_unique(x, sep = ", ")
to_string_unique(x, sep = ", ")
transmit(remoteDir, pattern = NULL, rename = NULL, compress = FALSE, localDir = "data-raw")
wash(df)

## Exported data

.__T__arrange:basejump: environment (environment[1])
.__T__content:Biobase: environment (environment[1])
.__T__expand:S4Vectors: environment (environment[1])
.__T__filter:basejump: environment (environment[1])
.__T__first:S4Vectors: environment (environment[1])
.__T__intersect:BiocGenerics: environment (environment[1])
.__T__mutate:basejump: environment (environment[1])
.__T__rename:S4Vectors: environment (environment[1])
.__T__select:AnnotationDbi: environment (environment[1])
.__T__setdiff:BiocGenerics: environment (environment[1])
.__T__setequal:base: environment (environment[1])
.__T__union:BiocGenerics: environment (environment[1])
globals: character (character[2])
starwars: tbl_df, tbl, data.frame (list[13])
