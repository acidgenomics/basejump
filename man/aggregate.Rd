% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AllGenerics.R, R/aggregate-methods.R
\docType{methods}
\name{aggregate}
\alias{aggregate}
\alias{aggregateRows}
\alias{aggregateCols}
\alias{aggregateCellsToSamples}
\alias{aggregateRows,matrix-method}
\alias{aggregateRows,sparseMatrix-method}
\alias{aggregateRows,SummarizedExperiment-method}
\alias{aggregateCols,matrix-method}
\alias{aggregateCols,sparseMatrix-method}
\alias{aggregateCols,SummarizedExperiment-method}
\alias{aggregateCols,SingleCellExperiment-method}
\alias{aggregateCellsToSamples,SingleCellExperiment-method}
\title{Aggregate Rows or Columns}
\usage{
aggregateRows(object, ...)

aggregateCols(object, ...)

aggregateCellsToSamples(object, ...)

\S4method{aggregateRows}{matrix}(object, groupings, fun = c("sum",
  "mean"))

\S4method{aggregateRows}{sparseMatrix}(object, groupings, fun = c("sum",
  "mean"))

\S4method{aggregateRows}{SummarizedExperiment}(object, col = "aggregate",
  fun = c("sum", "mean"))

\S4method{aggregateCols}{matrix}(object, groupings, fun = c("sum",
  "mean"))

\S4method{aggregateCols}{sparseMatrix}(object, groupings, fun = c("sum",
  "mean"))

\S4method{aggregateCols}{SummarizedExperiment}(object, col = "aggregate",
  fun = c("sum", "mean"))

\S4method{aggregateCols}{SingleCellExperiment}(object, fun = c("sum",
  "mean"))

\S4method{aggregateCellsToSamples}{SingleCellExperiment}(object,
  fun = c("sum", "mean"))
}
\arguments{
\item{object}{Object.}

\item{...}{Additional arguments.}

\item{groupings}{\code{factor}. Defines the aggregation groupings.
The new aggregate names are defined as the \code{factor} \code{levels}, and the
original, unaggregated names are defined as the \code{names}.}

\item{fun}{\code{string}. Name of the aggregation function. Uses \code{\link[=match.arg]{match.arg()}}.}

\item{col}{\code{string}. Name of column in either \code{\link[=rowData]{rowData()}} or \code{\link[=colData]{colData()}} that
defines the desired aggregation groupings.}
}
\value{
Modified object, with aggregated rows (features) or columns
(samples).
}
\description{
Aggregate gene/transcript features (rows) or sample replicates (columns).
}
\details{
\code{\link[=aggregateRows]{aggregateRows()}} works down the rows, and is designed to aggregate features
(e.g. genes or transcripts). Most commonly, the \code{\link[=aggregateRows]{aggregateRows()}} function
can be used to aggregate counts from transcript-level to gene-level.

\code{\link[=aggregateCols]{aggregateCols()}} works across the columns, and is designed to aggregate
sample replicates.
}
\section{SummarizedExperiment}{


Slot an \code{aggregate} column into \code{\link[=rowData]{rowData()}} for \code{aggregateRows()}, or into
\code{\link[=colData]{colData()}} for \code{\link[=aggregateCols]{aggregateCols()}}. The S4 method will define the \code{groupings}
automatically and perform the aggregation.
}

\section{SingleCellExperiment}{


Method support inherits from \code{SummarizedExperiment}, and still relies upon
slotting an \code{aggregate} column into \code{\link[=colData]{colData()}}. Note that these groupings
will map to cells, so care must be taken to properly aggregate samples.

\code{\link[=aggregateCellsToSamples]{aggregateCellsToSamples()}} is a utilty function that factilites
cell-to-sample aggregation. By default, this function will sum the counts
across cells to sample level.
}

\examples{
# Example data ====
counts <- matrix(
    data = c(
        0L, 1L, 1L, 1L,
        1L, 0L, 1L, 1L,
        1L, 1L, 0L, 1L,
        1L, 1L, 1L, 0L
    ),
    nrow = 4L,
    ncol = 4L,
    byrow = TRUE,
    dimnames = list(
        paste0("transcript", seq_len(4L)),
        paste(
            paste0("sample", rep(seq_len(2L), each = 2L)),
            paste0("replicate", rep(seq_len(2L), times = 2L)),
            sep = "_"
        )
    )
)
print(counts)

genes <- factor(paste0("gene", rep(seq_len(2L), each = 2L)))
names(genes) <- rownames(counts)
print(genes)

samples <- factor(paste0("sample", rep(seq_len(2L), each = 2L)))
names(samples) <- colnames(counts)
print(samples)

cells <- factor(paste0("cell", rep(seq_len(2L), each = 2L)))
names(samples) <- colnames(counts)
print(samples)

# matrix
matrix <- as(counts, "matrix")
class(matrix)
print(matrix)

# sparseMatrix
sparse <- as(matrix, "sparseMatrix")
class(sparse)
print(sparse)

# SummarizedExperiment
se <- SummarizedExperiment::SummarizedExperiment(
    assay = list(counts = sparse),
    colData = S4Vectors::DataFrame(
        sampleName = names(samples),
        aggregate = samples
    ),
    rowData = S4Vectors::DataFrame(aggregate = genes)
)
print(se)

# aggregateRows ====
aggregateRows(matrix, groupings = genes)
aggregateRows(sparse, groupings = genes)
aggregateRows(se)

# aggregateCols ====
aggregateCols(matrix, groupings = samples)
aggregateCols(sparse, groupings = samples)
aggregateCols(se)

# aggregateCellsToSamples ====
data(sce_small)
x <- aggregateCellsToSamples(sce_small)
print(x)
}
\seealso{
\itemize{
\item \link[stats:aggregate]{stats::aggregate}.
\item \link[Matrix.utils:aggregate.Matrix]{Matrix.utils::aggregate.Matrix}.
\item \link[S4Vectors:aggregate]{S4Vectors::aggregate}.
}

Other Data Functions: \code{\link{combine}},
  \code{\link{counts}},
  \code{\link{makeSummarizedExperiment}},
  \code{\link{mapGenes}}, \code{\link{meltCounts}},
  \code{\link{metrics}}, \code{\link{minimalSampleData}},
  \code{\link{sampleData}}, \code{\link{sampleNames}},
  \code{\link{selectSamples}},
  \code{\link{subsetPerSample}}, \code{\link{tpm}}
}
\author{
Michael Steinbaugh, Rory Kirchner
}
\concept{Data Functions}
