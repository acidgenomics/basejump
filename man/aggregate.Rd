% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AllGenerics.R, R/aggregate-methods.R
\docType{methods}
\name{aggregateCols}
\alias{aggregateCols}
\alias{aggregateRows}
\alias{aggregate}
\alias{aggregateCols,matrix-method}
\alias{aggregateCols,sparseMatrix-method}
\alias{aggregateCols,SummarizedExperiment-method}
\alias{aggregateRows,matrix-method}
\alias{aggregateRows,sparseMatrix-method}
\alias{aggregateRows,SummarizedExperiment-method}
\title{Aggregate Columns or Rows}
\usage{
aggregateCols(object, ...)

aggregateRows(object, ...)

\S4method{aggregateCols}{matrix}(object, groupings)

\S4method{aggregateCols}{sparseMatrix}(object, groupings)

\S4method{aggregateCols}{SummarizedExperiment}(object)

\S4method{aggregateRows}{matrix}(object, groupings)

\S4method{aggregateRows}{sparseMatrix}(object, groupings)

\S4method{aggregateRows}{SummarizedExperiment}(object)
}
\arguments{
\item{object}{Object.}

\item{...}{Additional arguments.}

\item{groupings}{\code{factor}. Defines the aggregation groupings.
The new aggregate names are defined as the \code{factor} \code{levels}, and the
original, unaggregated names are defined as the \code{names}.}
}
\value{
Modified object, with aggregated columns (samples) or rows
(features).
}
\description{
Aggregate sample replicates (columns) or gene/transcript features (rows).
}
\details{
\code{\link[=aggregateCols]{aggregateCols()}} works across the columns, and is designed to aggregate
sample replicates. \code{\link[=aggregateRows]{aggregateRows()}} works down the rows, and is designed to
aggregate features (e.g. genes or transcripts). Most commonly, the
\code{\link[=aggregateRows]{aggregateRows()}} function can be used to aggregate counts from
transcript-level to gene-level.
}
\section{SummarizedExperiment}{


Slot an \code{aggregate} column into \code{colData()} for \code{aggregateCols()}, or into
\code{rowData()} for \code{aggregateRows()}. The S4 method will define the \code{groupings}
automatically and perform the aggregation.
}

\examples{
counts <- DataFrame(
    sample1_replicate1 = as.integer(c(0, 1, 1, 1)),
    sample1_replicate2 = as.integer(c(1, 0, 1, 1)),
    sample2_replicate1 = as.integer(c(1, 1, 0, 1)),
    sample2_replicate2 = as.integer(c(1, 1, 1, 0)),
    row.names = paste0("transcript", seq_len(4))
)
print(counts)

# Dense matrix
matrix <- as(counts, "matrix")
class(matrix)
print(matrix)

# Sparse matrix
sparse <- as(matrix, "sparseMatrix")
class(sparse)
print(sparse)

samples <- factor(c("sample1", "sample1", "sample2", "sample2"))
names(samples) <- colnames(counts)
print(samples)

genes <- factor(c("gene1", "gene1", "gene2", "gene2"))
names(genes) <- rownames(counts)
print(genes)

# SummarizedExperiment
se <- SummarizedExperiment(
    assay = list(counts = sparse),
    colData = DataFrame(
        sampleName = names(samples),
        aggregate = samples
    ),
    rowData = DataFrame(aggregate = genes)
)
print(se)

# aggregateCols ====
aggregateCols(matrix, groupings = samples)
aggregateCols(sparse, groupings = samples)
aggregateCols(se)

# aggregateRows ====
aggregateRows(matrix, groupings = genes)
aggregateRows(sparse, groupings = genes)
aggregateRows(se)
}
\seealso{
Other Data Functions: \code{\link{counts}},
  \code{\link{gene2symbol}},
  \code{\link{makeSummarizedExperiment}},
  \code{\link{mapGenesToIDs}}, \code{\link{metrics}},
  \code{\link{sampleData}}, \code{\link{sampleNames}},
  \code{\link{selectSamples}}
}
\author{
Michael Steinbaugh, Rory Kirchner
}
\concept{Data Functions}
