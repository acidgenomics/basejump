% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/matchArgsToDoCall.R
\name{matchArgsToDoCall}
\alias{matchArgsToDoCall}
\title{Match Arguments to Do Call}
\usage{
matchArgsToDoCall(args, removeFormals = NULL,
  definition = sys.function(sys.parent()),
  call = sys.call(sys.parent()), expand.dots = TRUE,
  envir = parent.frame(2L), verbose = FALSE)
}
\arguments{
\item{removeFormals}{\code{character}. Names of formal arguments to remove from
\code{args} list before passing to \code{do.call()}.}

\item{definition}{a function, by default the function from which
    \code{match.call} is called.  See details.}

\item{call}{an unevaluated call to the function specified by
    \code{definition}, as generated by \code{\link{call}}.}

\item{expand.dots}{logical.  Should arguments matching \code{\dots}
    in the call be included or left as a \code{\dots} argument?}

\item{envir}{an environment, from which the \code{\dots} in \code{call}
    are retrieved, if any.}

\item{verbose}{\code{boolean}. Run the function with verbose messages? It is only
recommended to enable this when debugging.}
}
\value{
\code{list}. Arguments to pass to \code{\link[=do.call]{do.call()}}.
}
\description{
Match Arguments to Do Call
}
\examples{
example <- function(object, xxx, ...) {
    args <- matchArgsToDoCall(
        args = list(
            object = object,
            collapse = " "
        ),
        removeFormals = "xxx"
    )
    print(args)
    do.call(what = paste, args = args)
}
example(c("hello", "world"))
}
\seealso{
Other Developer Functions: \code{\link{MethodDefinition}},
  \code{\link{detectHPC}}, \code{\link{dots}},
  \code{\link{flatFiles}},
  \code{\link{initializeDirectory}},
  \code{\link{localOrRemoteFile}},
  \code{\link{matchInterestingGroups}},
  \code{\link{multiassignAsEnvir}},
  \code{\link{printString}}, \code{\link{standardizeCall}},
  \code{\link{uniteInterestingGroups}}
}
\author{
Michael Steinbaugh
}
\concept{Developer Functions}
