% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/makeSummarizedExperiment.R
\name{makeSummarizedExperiment}
\alias{makeSummarizedExperiment}
\title{Make a \code{SummarizedExperiment} object}
\usage{
makeSummarizedExperiment(assays, rowRanges = NULL, rowData = NULL,
  colData = NULL, metadata = NULL, transgeneNames = NULL,
  spikeNames = NULL)
}
\arguments{
\item{assays}{\code{list}.
Count matrices, which must have matching dimensions. Counts can be passed
in as either a dense matrix (\code{matrix}) or sparse matrix (\code{sparseMatrix}).}

\item{rowRanges}{\code{GRanges}.
Genomic ranges (e.g. genome annotations). Metadata describing the assay
rows.}

\item{rowData}{\code{DataFrame}.
Metadata describing the assay rows, if genomic ranges are not available.
\emph{Use rowRanges (GRanges) instead, if possible}.}

\item{colData}{\code{DataFrame}.
Metadata describing the assay columns. For bulk RNA-seq, this data
describes the samples. For single-cell RNA-seq, this data describes the
cells.}

\item{metadata}{\code{list}.
Metadata.}

\item{transgeneNames}{\code{character}.
Vector indicating which assay rows denote transgenes (e.g. EGFP, TDTOMATO).}

\item{spikeNames}{\code{character}.
Vector indicating which assay rows denote spike-in sequences (e.g. ERCCs).}
}
\value{
\itemize{
\item Providing \code{rowRanges}: \code{RangedSummarizedExperiment}.
\item Providing \code{rowData}: \code{SummarizedExperiment}.
}
}
\description{
This function is a utility wrapper for \code{SummarizedExperiment} that provides
automatic subsetting for row and column data, as well as automatic handling
of transgenes and spike-ins. Additionally, it improves upon the standard
constructor by slotting useful session information into the \code{metadata} slot:
}
\details{
\itemize{
\item \code{date}: Today's date, returned from \code{Sys.Date}.
\item \code{wd}: Working directory, returned from \code{getwd}.
\item \code{sessionInfo}: \code{sessioninfo::session_info} return.
}
}
\note{
Column and rows always return sorted alphabetically.
}
\examples{
library(IRanges)
library(GenomicRanges)
library(SummarizedExperiment)

## Rows (genes)
genes <- c(
    "EGFP",  # transgene
    paste0("gene", seq_len(3L))
)
print(genes)

## Columns (samples)
samples <- paste0("sample", seq_len(4L))
print(samples)

## Counts (assay)
counts <- matrix(
    data = seq_len(16L),
    nrow = 4L,
    ncol = 4L,
    dimnames = list(genes, samples)
)
## Primary assay must be named "counts".
assays <- list(counts = counts)
print(assays)

## Row data (genomic ranges)
rowRanges <- GRanges(
    seqnames = rep("1", times = 3L),
    ranges = IRanges(
        start = seq(from = 1L, to = 201L, by = 100L),
        end = seq(from = 100L, to = 300L, by = 100L)
    )
)
## Note that we haven't defined the transgene here.
## It will be handled automatically in the function call.
names(rowRanges) <- paste0("gene", seq_len(3L))
print(rowRanges)

## Column data
colData <- DataFrame(
    genotype = rep(c("wildtype", "knockout"), times = 1L, each = 2L),
    age = rep(c(3L, 6L), 2L),
    row.names = samples
)
print(colData)

## Note that this returns with the dimnames sorted.
x <- makeSummarizedExperiment(
    assays = assays,
    rowRanges = rowRanges,
    colData = colData,
    transgeneNames = "EGFP"
)
print(x)
}
\seealso{
\itemize{
\item \code{SummarizedExperiment::SummarizedExperiment}.
\item \code{SingleCellExperiment::SingleCellExperiment}.
\item \code{help("RangedSummarizedExperiment-class", "SummarizedExperiment")}.
\item \code{help("SummarizedExperiment-class", "SummarizedExperiment")}.
\item \code{help("SingleCellExperiment-class", "SingleCellExperiment")}.
}
}
