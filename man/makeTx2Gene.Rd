% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/makeTx2Gene.R
\name{makeTx2Gene}
\alias{makeTx2Gene}
\alias{makeTx2GeneFromEnsembl}
\alias{makeTx2GeneFromEnsDb}
\alias{makeTx2GeneFromGFF}
\alias{makeTx2GeneFromGTF}
\title{Make a Tx2Gene object}
\usage{
makeTx2GeneFromEnsembl(
  organism,
  genomeBuild = NULL,
  release = NULL,
  ignoreTxVersion = TRUE
)

makeTx2GeneFromEnsDb(object, ignoreTxVersion = TRUE)

makeTx2GeneFromGFF(file, ignoreTxVersion = TRUE)
}
\arguments{
\item{organism}{\code{character(1)}.
Full Latin organism name (e.g. \code{"Homo sapiens"}).}

\item{genomeBuild}{\code{character(1)}.
Ensembl genome build assembly name (e.g. \code{"GRCh38"}). If set \code{NULL},
defaults to the most recent build available.
Note: don't pass in UCSC build IDs (e.g. \code{"hg38"}).}

\item{release}{\code{integer(1)}.
Ensembl release version (e.g. \code{90}). We recommend setting this value if
possible, for improved reproducibility. When left unset, the latest release
available via AnnotationHub/ensembldb is used. Note that the latest version
available can vary, depending on the versions of AnnotationHub and
ensembldb in use.}

\item{ignoreTxVersion}{\code{logical(1)}. Don't the include the transcript version
in the identifier. Only applies when \code{level = "transcripts"}. This
simplifies identifier matching when generating a \code{tx2gene} file.}

\item{object}{Object.}

\item{file}{\code{character(1)}.
File path.}
}
\value{
\code{Tx2Gene}.
}
\description{
Make a Tx2Gene object
}
\note{
Updated 2019-09-05.
}
\section{GFF/GTF file}{


Remote URLs and compressed files are supported.
}

\examples{
## makeTx2GeneFromEnsembl ====
x <- makeTx2GeneFromEnsembl(organism = "Homo sapiens")
print(x)

## makeTx2GeneFromEnsDb ====
if ("EnsDb.Hsapiens.v75" \%in\% rownames(installed.packages())) {
    x <- makeTx2GeneFromEnsDb("EnsDb.Hsapiens.v75")
    print(x)
}

## makeTx2GeneFromGFF ====
## GTF
file <- file.path(basejumpTestsURL, "example.gtf")
x <- makeTx2GeneFromGFF(file)
print(x)

## GFF3
file <- file.path(basejumpTestsURL, "example.gff3")
x <- makeTx2GeneFromGFF(file)
print(x)
}
