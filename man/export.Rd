% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AllGenerics.R, R/export-methods.R
\docType{methods}
\name{export}
\alias{export}
\alias{export,ANY-method}
\alias{export,sparseMatrix-method}
\alias{export,SummarizedExperiment-method}
\alias{export,SingleCellExperiment-method}
\title{Export}
\usage{
export(x, ...)

\S4method{export}{ANY}(x, file, format, ...)

\S4method{export}{sparseMatrix}(x, file, format)

\S4method{export}{SummarizedExperiment}(x, dir = ".",
  convertGenesToSymbols = FALSE, compress = FALSE)

\S4method{export}{SingleCellExperiment}(x, dir = ".",
  convertGenesToSymbols = FALSE, compress = FALSE)
}
\arguments{
\item{x}{Object.}

\item{...}{Additional arguments.}

\item{file}{\code{string}. File path.}

\item{format}{An optional character string containing the file format, which can be used to override the format inferred from \code{file} or, in lieu of specifying \code{file}, a file with the symbol name of \code{x} and the specified file extension will be created. Must specify \code{file} and/or \code{format}. Shortcuts include: \dQuote{,} (for comma-separated values), \dQuote{;} (for semicolon-separated values), \dQuote{|} (for pipe-separated values), and \dQuote{dump} for \code{\link[base]{dump}}.}

\item{dir}{\code{string}. Output directory. Defaults to the current working
directory.}

\item{convertGenesToSymbols}{\code{boolean}. Automatically convert gene IDs to
gene symbols in the rownames.}

\item{compress}{\code{boolean}. Apply gzip compression to all files.}
}
\value{
Invisible \code{character}. File path(s).
}
\description{
Export data out of R and write to disk.
}
\details{
This is a wrapper for \code{\link[rio:export]{rio::export()}} that adds support for additional S4
classes in Bioconductor.
}
\section{Row names}{


The standard \code{\link[rio:export]{rio::export()}} call will drop rownames when exporting to CSV.
The \code{readr::write_*()} family of functions also never write rownames. This is
a \emph{really poor} default setting for handling genomic data, which often
contain gene identifiers in the rownames. Here we're performing any internal
tibble coercion step to ensure rownames are always moved to a "\code{rowname}"
column in the CSV export.
}

\examples{
# matrix ====
rnaseq_counts <- counts(rse_small)
stopifnot(is.matrix(rnaseq_counts))
export(rnaseq_counts, format = "csv")

# sparseMatrix ====
single_cell_counts <- counts(sce_small)
stopifnot(is(single_cell_counts, "sparseMatrix"))
export(single_cell_counts, format = "mtx")

# Clean up
file.remove(c(
    "rnaseq_counts.csv",
    "single_cell_counts.mtx",
    "single_cell_counts.mtx.colnames",
    "single_cell_counts.mtx.rownames"
))
}
\seealso{
\code{\link[rio:export]{rio::export()}}.

Other Import/Export Functions: \code{\link{assignAndSaveData}},
  \code{\link{import}}, \code{\link{loadDataAsName}},
  \code{\link{loadData}}, \code{\link{loadRemoteData}},
  \code{\link{saveData}}, \code{\link{transmit}},
  \code{\link{writeCounts}}
}
\concept{Import/Export Functions}
