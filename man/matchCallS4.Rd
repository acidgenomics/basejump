% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/matchCall.R
\name{matchCallS4}
\alias{matchCallS4}
\title{Functions to Access the Function Call Stack}
\usage{
matchCallS4(f, signature, verbose = FALSE)
}
\arguments{
\item{verbose}{\code{boolean}. Run the function with verbose messages? It is only
recommended to enable this when debugging.}
}
\value{
\code{call}.
}
\description{
Functions to Access the Function Call Stack
}
\note{
\code{\link[base:match.call]{base::match.call()}} doesn't always work correctly inside S4 methods. Here we
are using a combination of \code{\link[base:sys.call]{base::sys.call()}} with \code{\link[pryr:standardise_call]{pryr::standardise_call()}}
to correctly capture named arguments inside an S4 method.
}
\examples{
x <- "XXX"
y <- "YYY"

# Standard call
testing <- function(object, ...) {
    matchCallS4()
}
testing(x, y)

# S4 mode
setGeneric(
    name = "testing",
    def = function(object, ...) {
        standardGeneric("testing")
    }
)

setMethod(
    f = "testing",
    signature = signature("character"),
    definition = function(object, ...) {
        matchCallS4()
    }
)
testing(x, y)

setMethod(
    f = "testing",
    signature = signature("character"),
    definition = function(object, xxx, ...) {
        matchCallS4()
    }
)
testing(x, y)
}
\seealso{
\itemize{
\item \code{\link[base:sys.calls]{base::sys.calls()}}.
\item \code{\link[base:sys.call]{base::sys.call()}}.
\item \code{\link[base:match.call]{base::match.call()}}.
}

Other Developer Functions: \code{\link{MethodDefinition}},
  \code{\link{detectHPC}}, \code{\link{dots}},
  \code{\link{flatFiles}},
  \code{\link{initializeDirectory}},
  \code{\link{localOrRemoteFile}},
  \code{\link{matchArgsToDoCall}},
  \code{\link{matchInterestingGroups}},
  \code{\link{multiassignAsEnvir}},
  \code{\link{printString}},
  \code{\link{uniteInterestingGroups}}
}
\author{
Michael Steinbaugh
}
\concept{Developer Functions}
