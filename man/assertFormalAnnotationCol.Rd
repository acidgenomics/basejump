% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/assertFormalAnnotationCol.R
\name{assertFormalAnnotationCol}
\alias{assertFormalAnnotationCol}
\alias{assert_formal_annotation_col}
\title{Annotation Column Formal Assert Check}
\usage{
assertFormalAnnotationCol(x, colData, severity = "stop")

assert_formal_annotation_col(x, colData, severity = "stop")
}
\arguments{
\item{x}{Object.}

\item{colData}{Column data.}

\item{severity}{How severe should the consequences of the assertion be?
Either "\code{stop}", "\code{warning}", "\code{message}", or "\code{none}".}
}
\value{
Abort on mismatch.
}
\description{
Annotation Column Formal Assert Check
}
\examples{
x <- data.frame(
    sample1 = c(1L, 2L),
    sample2 = c(3L, 4L),
    row.names = c("gene1", "gene2"),
    stringsAsFactors = FALSE)
colData <- data.frame(
    genotype = c("wt", "ko"),
    row.names = c("sample1", "sample2"),
    stringsAsFactors = TRUE)

# Success
assertFormalAnnotationCol(x, colData)

# Failure
tryCatch(
    assertFormalAnnotationCol(mtcars, colData),
    error = function(e) e)
}
\seealso{
Other Assert Checks: \code{\link{assertAllAreNonExisting}},
  \code{\link{assertFormalColorFunction}},
  \code{\link{assertFormalCompress}},
  \code{\link{assertFormalGene2symbol}},
  \code{\link{assertFormalHeaderLevel}},
  \code{\link{assertHasRownames}},
  \code{\link{assertIsANumberOrNULL}},
  \code{\link{assertIsAStringOrNULL}},
  \code{\link{assertIsAnIntegerOrNULL}},
  \code{\link{assertIsAnnotable}},
  \code{\link{assertIsCharacterOrNULL}},
  \code{\link{assertIsDataFrameOrNULL}},
  \code{\link{assertIsGene2symbol}},
  \code{\link{assertIsImplicitInteger}},
  \code{\link{assertIsTx2gene}}, \code{\link{assert}}
}
