% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/assertions.R
\name{assertFormalGene2Symbol}
\alias{assertFormalGene2Symbol}
\title{Check Gene-to-Symbol Mappings}
\usage{
assertFormalGene2Symbol(x, genes, gene2symbol)
}
\arguments{
\item{x}{Object class supporting \code{rownames}. All rownames in this object
must intersect with the rownames defined in the \code{gene2symbol} argument.}

\item{genes}{\code{character}. Gene identifiers. It is considered better practice
to input the stable gene identifiers from Ensembl (e.g. "ENSG00000000003")
and not the (HGNC) gene symbols (e.g. "TSPN6"), if possible.}

\item{gene2symbol}{\code{Gene2Symbol}. Gene-to-symbol mappings. Must contain
\code{geneID} and \code{geneName} columns. See \code{Gene2Symbol()} for more information.}
}
\value{
No value.
}
\description{
Check Gene-to-Symbol Mappings
}
\examples{
DataFrame <- S4Vectors::DataFrame

x <- DataFrame(
    "sample1" = c(1L, 2L),
    "sample2" = c(3L, 4L),
    row.names = c("gene1", "gene2")
)
print(x)

gene2symbol <- Gene2Symbol(
    object = DataFrame(
        geneID = c("ENSG00000000003", "ENSG00000000005"),
        geneName = c("TSPAN6", "TNMD"),
        row.names = rownames(x)
    )
)
print(gene2symbol)

geneIDs <- gene2symbol[["geneID"]]
print(geneIDs)

geneNames <- gene2symbol[["geneName"]]
print(geneNames)

assertFormalGene2Symbol(
    x = x,
    genes = geneIDs,
    gene2symbol = gene2symbol
)
assertFormalGene2Symbol(
    x = x,
    genes = geneNames,
    gene2symbol = gene2symbol
)
}
