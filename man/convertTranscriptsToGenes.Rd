% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AllGenerics.R,
%   R/convertTranscriptsToGenes-methods.R
\docType{methods}
\name{convertTranscriptsToGenes}
\alias{convertTranscriptsToGenes}
\alias{convertTranscriptsToGenes,character-method}
\alias{convertTranscriptsToGenes,matrix-method}
\alias{convertTranscriptsToGenes,sparseMatrix-method}
\alias{convertTranscriptsToGenes,SummarizedExperiment-method}
\title{Convert Ensembl Transcripts to Genes}
\usage{
convertTranscriptsToGenes(object, ...)

\S4method{convertTranscriptsToGenes}{character}(object, tx2gene = NULL,
  organism = NULL, build = NULL, release = NULL)

\S4method{convertTranscriptsToGenes}{matrix}(object, tx2gene = NULL,
  organism = NULL, build = NULL, release = NULL, aggregate = TRUE)

\S4method{convertTranscriptsToGenes}{sparseMatrix}(object,
  tx2gene = NULL, organism = NULL, build = NULL, release = NULL,
  aggregate = TRUE)

\S4method{convertTranscriptsToGenes}{SummarizedExperiment}(object)
}
\arguments{
\item{object}{Object.}

\item{...}{Passthrough to \code{\link[=makeTx2geneFromEnsembl]{makeTx2geneFromEnsembl()}}.}

\item{tx2gene}{\code{tx2gene} or \code{NULL}. Transcript-to-gene mappings. If set
\code{NULL}, the function will attempt to download the mappings from Ensembl
automatically.}

\item{organism}{\code{string}. Full latin organism name (e.g. "\code{Homo sapiens}").}

\item{build}{\code{string} or \code{NULL}. Genome build assembly name (e.g.
"\code{GRCh38}"). If set \code{NULL}, defaults to the most recent build available.}

\item{release}{\code{scalar integer} or \code{NULL}. Release version (e.g. \code{90}). If
set \code{NULL}, defaults to the most recent release available.}

\item{aggregate}{\code{boolean}. For objects supporting \code{\link[=dim]{dim()}}, aggregate counts
to gene level and collapse the matrix.}
}
\value{
\itemize{
\item \code{character}: \code{factor}. Genes in the values, transcripts in the names.
\item \code{matrix}, \code{sparseMatrix}, \code{SummarizedExperiment}: Object containing counts
collapsed to gene level by default (see \code{aggregate} argument).
}
}
\description{
Convert Ensembl Transcripts to Genes
}
\note{
For objects containing a counts matrix, the object rows will be collapsed to
gene level using \code{\link[=aggregateRows]{aggregateRows()}}. This applies to our
\code{SummarizedExperiment} method.
}
\examples{
tx2gene <- tx2gene(tx_se_small)
print(tx2gene)
transcriptIDs <- rownames(tx_se_small)
print(transcriptIDs)
stopifnot(all(transcriptIDs \%in\% rownames(tx2gene)))

# character ====
# Returns as factor.
x <- convertTranscriptsToGenes(transcriptIDs, tx2gene = tx2gene)
print(x)
str(x)

# matrix ====
# Note that transcript IDs currently must be in the rows.
counts <- counts(tx_se_small)
print(counts)
# Aggregate to gene level.
x <- convertTranscriptsToGenes(counts, tx2gene = tx2gene, aggregate = TRUE)
print(x)
colSums(x)
# Simply map to rownames.
x <- convertTranscriptsToGenes(counts, tx2gene = tx2gene, aggregate = FALSE)
print(x)
colSums(x)

# SummarizedExperiment ====
object <- tx_se_small
print(object)
}
\seealso{
\code{\link[=aggregateRows]{aggregateRows()}}.

Other Annotation Functions: \code{\link{broadClass}},
  \code{\link{convertGenesToSymbols}},
  \code{\link{convertUCSCBuildToEnsembl}},
  \code{\link{detectOrganism}}, \code{\link{eggnog}},
  \code{\link{emptyRanges}}, \code{\link{geneSynonyms}},
  \code{\link{hgnc2gene}}, \code{\link{makeGRanges}},
  \code{\link{makeGene2symbol}}, \code{\link{makeTx2gene}},
  \code{\link{mgi2gene}}, \code{\link{panther}},
  \code{\link{stripTranscriptVersions}}
}
\author{
Michael Steinbaugh
}
\concept{Annotation Functions}
