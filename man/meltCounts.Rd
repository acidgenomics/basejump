% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/meltCounts-methods.R
\docType{methods}
\name{meltCounts}
\alias{meltCounts}
\alias{meltCounts,matrix-method}
\alias{meltCounts,SummarizedExperiment-method}
\title{Melt count matrix into long format}
\usage{
meltCounts(object, ...)

\S4method{meltCounts}{matrix}(object, minCounts = 1L,
  minCountsMethod = c("perFeature", "absolute"), trans = c("identity",
  "log2", "log10"))

\S4method{meltCounts}{SummarizedExperiment}(object, assay = 1L,
  minCounts = 1L, minCountsMethod = c("perFeature", "absolute"),
  trans = c("identity", "log2", "log10"))
}
\arguments{
\item{object}{Object.}

\item{minCounts}{\code{integer(1)} or \code{NULL}.
Minimum count threshold to apply. Disable with \code{NULL}. Filters using
"greater than or equal to" logic internally. Note that this threshold gets
applied prior to logarithmic transformation, when \code{trans} argument applies.}

\item{minCountsMethod}{\code{character(1)}.
Uses \code{\link[base:match.arg]{match.arg()}}.
\itemize{
\item \code{perFeature}: \emph{Recommended}. Applies cutoff per row feature (i.e. gene).
Internally, \code{\link[base:rowSums]{rowSums()}} values are checked against this
cutoff threshold prior to the melt operation.
\item \code{absolute}: Applies hard cutoff to \code{counts} column after the melt
operation. This applies to all counts, not per feature.
}}

\item{trans}{\code{character(1)}.
Apply a log transformation (e.g. \code{log2(x + 1L)}) to the count matrix prior
to melting, if desired. Use \code{"identity"} to return unmodified (default).}

\item{assay}{\code{vector(1)}.
Name or index of count matrix slotted in
\code{\link[SummarizedExperiment:assays]{assays()}}. When passing in a string, the
name must be defined in
\code{\link[SummarizedExperiment:assayNames]{assayNames()}}.}

\item{...}{Additional arguments.}
}
\value{
\code{grouped_df}.
Grouped by \code{colname} (e.g. sample ID) and \code{rowname} (e.g. gene ID).
}
\description{
Melt count matrix into long format
}
\examples{
data(rse, package = "acidtest")
dim(rse)
x <- meltCounts(rse, minCounts = NULL)
dim(x)
print(x)
}
\seealso{
\code{reshape2::melt()}.
}
