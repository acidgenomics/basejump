% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/loadDataAsName.R
\name{loadDataAsName}
\alias{loadDataAsName}
\title{Load Data File as Name}
\usage{
loadDataAsName(..., dir = getwd(), ext = "rda", envir = parent.frame(),
  replace = FALSE)
}
\arguments{
\item{...}{Key value pairs, defining the name mappings. The argument name
defines the new name of the object in the environment, whereas the value
(string) denotes the original object name. For example, \code{newName1 = "oldName1", newName2 = "oldName2"}.}

\item{dir}{Output directory. Defaults to the current working directory.}

\item{ext}{R data file extension. Defaults to \code{rda} and typically should not
be changed.}

\item{envir}{Environment to use for assignment. Defaults to \code{parent.frame()},
which will assign into the calling environment.}

\item{replace}{Replace existing object in destination environment.}
}
\value{
Silently return named character vector of file paths.
}
\description{
Load Data File as Name
}
\examples{
# New dots method (>= 0.1.1)
# Simply specify the key-value pairs as arguments, and set the directory path
# (`dir`) where the R data files saved. This example will load `mtcars.rda`
# and `starwars.rda` files saved at `data/` as `newName1` and `newName2` in
# the working environment.
\dontrun{
loadDataAsName(
    newName1 = "mtcars",
    newName2 = "starwars",
    dir = "data"
)
}

# Requesting the file path directly also works. In this case, the `dir`
# argument wil be ignored.
\dontrun{
loadDataAsName(newName = "data/mtcars.rda")
}

# Legacy mappings method using a named character vector is still supported.
\dontrun{
loadDataAsName(
    c(newName1 = "mtcars",
      newName2 = "starwars"),
    dir = "data"
)
}
}
