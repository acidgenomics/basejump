% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AllGenerics.R, R/geometricMean-methods.R
\docType{methods}
\name{geometricMean}
\alias{geometricMean}
\alias{geometricMean,numeric-method}
\alias{geometricMean,matrix-method}
\alias{geometricMean,sparseMatrix-method}
\title{Geometric Mean}
\usage{
geometricMean(object, ...)

\S4method{geometricMean}{numeric}(object, removeNA = TRUE,
  zeroPropagate = FALSE)

\S4method{geometricMean}{matrix}(object, MARGIN = 2L)

\S4method{geometricMean}{sparseMatrix}(object, MARGIN = 2L)
}
\arguments{
\item{object}{Object.}

\item{...}{Additional arguments.}

\item{removeNA}{\code{boolean}. Remove \code{NA} values from calculations.}

\item{zeroPropagate}{\code{boolean}. Allow propagation of zeroes.}

\item{MARGIN}{a vector giving the subscripts which the function will
    be applied over.  E.g., for a matrix \code{1} indicates rows,
    \code{2} indicates columns, \code{c(1, 2)} indicates rows and
    columns. Where \code{X} has named dimnames, it can be a character
    vector selecting dimension names.}
}
\value{
\code{numeric}.
}
\description{
The geometric mean is the nth root of n products or e to the mean log of \code{x}.
Useful for describing non-normal (i.e. geometric) distributions.
}
\details{
This function should be fully zero- and \code{NA}-tolerant. This calculation is
not particularly useful if there are elements that are <= 0 and will return
\code{NaN}.
}
\examples{
# numeric ====
vec1 <- seq(1L, 5L, 1L)
print(vec1)
geometricMean(vec1)

vec2 <- vec1 ^ 2L
print(vec2)
geometricMean(vec2)

# matrix ====
matrix <- matrix(
    data = c(vec1, vec2),
    ncol = 2L,
    byrow = FALSE
)
print(matrix)
geometricMean(matrix)

# sparseMatrix ====
sparse <- as(matrix, "sparseMatrix")
print(sparse)
geometricMean(sparse)
}
\seealso{
Modified version of \code{psych::geometric.mean()} and Paul McMurdie's
\href{https://stackoverflow.com/a/25555105}{code}.

Other Math and Science Functions: \code{\link{logRatio}},
  \code{\link{microplate}}
}
\author{
Michael Steinbaugh
}
\concept{Math and Science Functions}
