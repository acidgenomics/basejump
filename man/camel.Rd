% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AllGenerics.R, R/methods-camel.R,
%   R/methods-upperCamel.R
\docType{methods}
\name{camel}
\alias{camel}
\alias{upperCamel}
\alias{camel}
\alias{camel,ANY-method}
\alias{camel,character-method}
\alias{camel,data.frame-method}
\alias{camel,DataFrame-method}
\alias{camel,factor-method}
\alias{camel,GRanges-method}
\alias{camel,list-method}
\alias{camel,List-method}
\alias{camel,matrix-method}
\alias{camel,SimpleList-method}
\alias{camel,tbl_df-method}
\alias{upperCamel,ANY-method}
\alias{upperCamel,character-method}
\alias{upperCamel,data.frame-method}
\alias{upperCamel,DataFrame-method}
\alias{upperCamel,factor-method}
\alias{upperCamel,GRanges-method}
\alias{upperCamel,list-method}
\alias{upperCamel,List-method}
\alias{upperCamel,matrix-method}
\alias{upperCamel,SimpleList-method}
\alias{upperCamel,tbl_df-method}
\title{Camel Case}
\usage{
camel(object, ...)

upperCamel(object, ...)

\S4method{camel}{ANY}(object, rownames = FALSE, colnames = TRUE,
  strict = FALSE)

\S4method{camel}{character}(object, strict = FALSE)

\S4method{camel}{data.frame}(object, rownames = FALSE, colnames = TRUE,
  strict = FALSE)

\S4method{camel}{DataFrame}(object, rownames = FALSE, colnames = TRUE,
  strict = FALSE)

\S4method{camel}{factor}(object, strict = FALSE)

\S4method{camel}{GRanges}(object, strict = FALSE)

\S4method{camel}{list}(object, strict = FALSE)

\S4method{camel}{List}(object, strict = FALSE)

\S4method{camel}{matrix}(object, rownames = FALSE, colnames = TRUE,
  strict = FALSE)

\S4method{camel}{SimpleList}(object, strict = FALSE)

\S4method{camel}{tbl_df}(object, strict = FALSE)

\S4method{upperCamel}{ANY}(object, rownames = FALSE, colnames = TRUE,
  strict = FALSE)

\S4method{upperCamel}{character}(object, strict = FALSE)

\S4method{upperCamel}{data.frame}(object, rownames = FALSE, colnames = TRUE,
  strict = FALSE)

\S4method{upperCamel}{DataFrame}(object, rownames = FALSE, colnames = TRUE,
  strict = FALSE)

\S4method{upperCamel}{factor}(object, strict = FALSE)

\S4method{upperCamel}{GRanges}(object, strict = FALSE)

\S4method{upperCamel}{list}(object, strict = FALSE)

\S4method{upperCamel}{List}(object, strict = FALSE)

\S4method{upperCamel}{matrix}(object, rownames = FALSE, colnames = TRUE,
  strict = FALSE)

\S4method{upperCamel}{SimpleList}(object, strict = FALSE)

\S4method{upperCamel}{tbl_df}(object, strict = FALSE)
}
\arguments{
\item{object}{Character vector or an object for which \code{\link[=names]{names()}} assignment
will be meaningful.}

\item{...}{Additional arguments.}

\item{rownames}{Apply sanitization on row names. This is not recommended
by default, since rownames commonly contain gene identifiers that should
not be modified.}

\item{colnames}{Apply sanitization on column names. This is generally
recommended by default.}

\item{strict}{Enforce strict name sanitization. When \code{TRUE}, this does not
allow the return of any capitalized acronyms. "RNA" will become "Rna", for
example.}
}
\value{
Object with syntatically valid names. For objects supporting
\code{\link[base:names]{base::names()}}, the underlying data returns unchanged.
}
\description{
Camel Case
}
\examples{
load(system.file("extdata/mn.rda", package = "basejump"))

# character ====
character <- mn$character
print(character)
camel(character)
upperCamel(character)

namedCharacter <- mn$namedCharacter
camel(namedCharacter)
upperCamel(namedCharacter)

# factor ====
factor <- mn$factor
print(factor)
camel(factor)
upperCamel(factor)

# data.frame ====
dataFrame <- mn$dataFrame
print(dataFrame)
camel(dataFrame, rownames = TRUE)
camel(dataFrame, rownames = FALSE)

# list ====
list <- mn$list
print(list)
camel(list)
}
\seealso{
Other Name Functions: \code{\link{dotted}},
  \code{\link{snake}}
}
\author{
Michael Steinbaugh
}
