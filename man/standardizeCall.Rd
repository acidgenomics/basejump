% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/standardizeCall.R
\name{standardizeCall}
\alias{standardizeCall}
\title{Standardize Call}
\usage{
standardizeCall(which = sys.parent(n = 1L), return = c("call", "list"),
  verbose = FALSE)
}
\arguments{
\item{which}{the frame number if non-negative, the number of frames
    to go back if negative.}

\item{return}{Object class to return. Uses \code{\link[=match.arg]{match.arg()}} internally and picks
the first item in the vector by default.}

\item{verbose}{\code{boolean}. Run the function with verbose messages? It is only
recommended to enable this when debugging.}
}
\value{
\itemize{
\item \code{call}: \code{call}. Matched call.
\item \code{list}: \code{list}. Verbose list that includes additional information about how
the call was standardized.
}
}
\description{
This function adds matching support for S4 methods with formals that aren't
identical to the generic, and use a nested \code{.local()} call.
}
\examples{
aaa <- "AAA"
bbb <- "BBB"

# Standard function
testing <- function(a, b) {
    standardizeCall()
}
testing(aaa, bbb)

# Inside S4 method
setGeneric(
    name = "testing",
    def = function(a, b, ...) {
        standardGeneric("testing")
    }
)

setMethod(
    f = "testing",
    signature = signature("character"),
    definition = function(a, b, ...) {
        standardizeCall()
    }
)
testing(aaa, bbb)
}
\seealso{
\itemize{
\item \link[base:match.call]{base::match.call}.
\item \link[base:sys.call]{base::sys.call}.
\item \link[base:sys.parent]{base::sys.parent}.
}
}
\author{
Michael Steinbaugh
}
