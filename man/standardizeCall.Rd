% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/standardizeCall.R
\name{standardizeCall}
\alias{standardizeCall}
\title{Standardize Call}
\usage{
standardizeCall(definition = sys.function(sys.parent()),
  call = sys.call(sys.parent()), expand.dots = TRUE,
  envir = parent.frame(2L), verbose = FALSE)
}
\arguments{
\item{definition}{a function, by default the function from which
    \code{match.call} is called.  See details.}

\item{call}{an unevaluated call to the function specified by
    \code{definition}, as generated by \code{\link{call}}.}

\item{expand.dots}{logical.  Should arguments matching \code{\dots}
    in the call be included or left as a \code{\dots} argument?}

\item{envir}{an environment, from which the \code{\dots} in \code{call}
    are retrieved, if any.}

\item{verbose}{\code{boolean}. Run the function with verbose messages? It is only
recommended to enable this when debugging.}
}
\description{
This function adds matching support for S4 methods with formals that aren't
identical to the generic, and use a nested \code{.local()} call.
}
\examples{
aaa <- "AAA"
bbb <- "BBB"

# Standard function
testing <- function(a, b) {
    standardizeCall()
}
testing(aaa, bbb)

# Inside S4 method
setGeneric(
    name = "testing",
    def = function(a, b, ...) {
        standardGeneric("testing")
    }
)

setMethod(
    f = "testing",
    signature = signature("character"),
    definition = function(a, b, ...) {
        standardizeCall()
    }
)
testing(aaa, bbb)
}
\seealso{
\code{\link[base:match.call]{base::match.call()}}.

Other Developer Functions: \code{\link{MethodDefinition}},
  \code{\link{detectHPC}}, \code{\link{dots}},
  \code{\link{initializeDirectory}},
  \code{\link{localOrRemoteFile}},
  \code{\link{matchArgsToDoCall}},
  \code{\link{matchInterestingGroups}},
  \code{\link{multiassignAsEnvir}},
  \code{\link{printString}},
  \code{\link{uniteInterestingGroups}}
}
\author{
Michael Steinbaugh
}
\concept{Developer Functions}
