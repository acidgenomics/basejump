% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/calls.R
\name{calls}
\alias{calls}
\alias{matchCall}
\alias{matchArgs}
\title{Functions to Access the Function Call Stack}
\usage{
matchCall(which = -1L)

matchArgs(which = -1L, S4 = FALSE)
}
\arguments{
\item{which}{the frame number if non-negative, the number of frames
    to go back if negative.}
}
\value{
\itemize{
\item 
\item 
}
}
\description{
Note that \code{\link[base:match.call]{base::match.call()}} doesn't always work correctly inside S4
methods. Here we are using a combination of \code{\link[base:sys.call]{base::sys.call()}} with
\code{\link[pryr:standardise_call]{pryr::standardise_call()}} to correctly capture named arguments inside an S4
method.
}
\examples{
# matchCall ====
f <- function(object) {
    matchCall(which = -1L)
}
f(object = "XXX")

# matchArgs ====
f <- function(object) {
    matchArgs(which = -1L)
}
f(object = "XXX")
}
\seealso{
\itemize{
\item \code{\link[base:sys.calls]{base::sys.calls()}}.
\item \code{\link[base:sys.call]{base::sys.call()}}.
\item \code{\link[base:match.call]{base::match.call()}}.
\item \code{\link[pryr:standardise_call]{pryr::standardise_call()}}.
}

Other Developer Functions: \code{\link{cleanSystemLibrary}},
  \code{\link{detectHPC}}, \code{\link{dots}},
  \code{\link{flatFiles}},
  \code{\link{initializeDirectory}},
  \code{\link{localOrRemoteFile}},
  \code{\link{matchInterestingGroups}},
  \code{\link{methodFormals}},
  \code{\link{multiassignAsEnvir}},
  \code{\link{printString}},
  \code{\link{uniteInterestingGroups}}
}
\author{
Michael Steinbaugh
}
\concept{Developer Functions}
