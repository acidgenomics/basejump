% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plotHeatmap-methods.R
\docType{methods}
\name{plotHeatmap}
\alias{plotHeatmap}
\alias{plotHeatmap,SummarizedExperiment-method}
\alias{plotHeatmap,SingleCellExperiment-method}
\alias{plotCorrelationHeatmap,SummarizedExperiment-method}
\alias{plotCorrelationHeatmap,SingleCellExperiment-method}
\alias{plotQuantileHeatmap,SummarizedExperiment-method}
\alias{plotQuantileHeatmap,SingleCellExperiment-method}
\title{Heatmap}
\usage{
\S4method{plotHeatmap}{SummarizedExperiment}(object, assay = 1L,
  interestingGroups = NULL, scale = c("none", "row", "column"),
  clusteringMethod = "ward.D2", clusterRows = FALSE,
  clusterCols = FALSE, showRownames = FALSE, showColnames = TRUE,
  treeheightRow = 50L, treeheightCol = 50L, color = viridis::viridis,
  legendColor = viridis::viridis, borderColor = NULL, title = NULL,
  ...)

\S4method{plotHeatmap}{SingleCellExperiment}(object, assay = 1L,
  interestingGroups = NULL, scale = c("none", "row", "column"),
  clusteringMethod = "ward.D2", clusterRows = FALSE,
  clusterCols = FALSE, showRownames = FALSE, showColnames = TRUE,
  treeheightRow = 50L, treeheightCol = 50L, color = viridis::viridis,
  legendColor = viridis::viridis, borderColor = NULL, title = NULL,
  ...)

\S4method{plotCorrelationHeatmap}{SummarizedExperiment}(object,
  assay = 1L, interestingGroups = NULL, method = c("pearson",
  "spearman"), clusteringMethod = "ward.D2", showRownames = TRUE,
  showColnames = TRUE, treeheightRow = 0L, treeheightCol = 50L,
  color = viridis::viridis, legendColor = viridis::viridis,
  borderColor = NULL, title = TRUE, ...)

\S4method{plotCorrelationHeatmap}{SingleCellExperiment}(object,
  assay = 1L, interestingGroups = NULL, method = c("pearson",
  "spearman"), clusteringMethod = "ward.D2", showRownames = TRUE,
  showColnames = TRUE, treeheightRow = 0L, treeheightCol = 50L,
  color = viridis::viridis, legendColor = viridis::viridis,
  borderColor = NULL, title = TRUE, ...)

\S4method{plotQuantileHeatmap}{SummarizedExperiment}(object, assay = 1L,
  interestingGroups = NULL, n = 10L, clusterRows = TRUE,
  clusterCols = TRUE, showRownames = FALSE, showColnames = TRUE,
  treeheightRow = 0L, treeheightCol = 50L, color = viridis::viridis,
  legendColor = viridis::viridis, legend = FALSE, borderColor = NULL,
  title = NULL, ...)

\S4method{plotQuantileHeatmap}{SingleCellExperiment}(object, assay = 1L,
  interestingGroups = NULL, n = 10L, clusterRows = TRUE,
  clusterCols = TRUE, showRownames = FALSE, showColnames = TRUE,
  treeheightRow = 0L, treeheightCol = 50L, color = viridis::viridis,
  legendColor = viridis::viridis, legend = FALSE, borderColor = NULL,
  title = NULL, ...)
}
\arguments{
\item{object}{Object.}

\item{assay}{\code{vector(1)}.
Name or index of count matrix slotted in
\link[SummarizedExperiment:assays]{assays}. When passing in a string, the name
must be defined in \link[SummarizedExperiment:assayNames]{assayNames}.}

\item{interestingGroups}{\code{character}.
Groups of interest that define the samples. If left unset, defaults to
\code{sampleName}.}

\item{scale}{\code{character(1)}.
Whether the values should be centered and scaled in either the row or
column direction ("\code{row}", "\code{column}"), or remain unscaled ("\code{none}").}

\item{clusteringMethod}{\code{character(1)}.
Clustering method. Accepts the same values as \code{stats::hclust}.}

\item{clusterRows, clusterCols}{\code{logical(1)}.
Arrange with hierarchical clustering.}

\item{showRownames, showColnames}{\code{logical(1)}.
Show row or column names.}

\item{treeheightRow, treeheightCol}{\code{integer(1)}.
Size of the row and column dendrograms. Use \code{0} to disable.}

\item{color}{\code{function}, \code{character}, or \code{NULL}.
Hexadecimal color function or values to use for plot.

We generally recommend these hexadecimal functions from the viridis
package:
\itemize{
\item \code{viridis::viridis()} (\emph{default}).
\item \code{viridis::inferno()}.
\item \code{viridis::magma()}.
\item \code{viridis::plasma()}.
}

Alternatively, colors can be defined manually using hexadecimal values
(e.g. \code{c("#FF0000", "#0000FF")}), but this is not generally recommended.
Refer to the RColorBrewer package for hexadecimal color palettes that may
be suitable. If set \code{NULL}, will use the default pheatmap colors.}

\item{legendColor}{\code{function} or \code{NULL}.
Hexadecimal color function to use for legend labels. Note that hexadecimal
values are not supported. If set \code{NULL}, will use the default pheatmap
colors.}

\item{borderColor}{\code{character(1)} or \code{NULL}.
Border color. Disabled by default for improved aesthetics.}

\item{title}{\code{character(1)} or \code{NULL}.
Plot title.}

\item{...}{Passthrough arguments to \code{\link[pheatmap:pheatmap]{pheatmap::pheatmap()}}.
The argument names must be formatted in camel case, not snake case.}

\item{method}{\code{character(1)}.
Correlation coefficient (or covariance) method to be computed. Defaults to
"\code{pearson}" but "\code{spearman}" can also be used. Consult the \code{\link[stats:cor]{stats::cor()}}
documentation for more information.}

\item{n}{\code{integer(1)}.
The number of quantile breaks to create.}

\item{legend}{\code{logical(1)}.
Show the color legend.}
}
\value{
\code{pheatmap}.
}
\description{
Construct a simple heatmap.
}
\section{Methods (by class)}{
\itemize{
\item \code{SummarizedExperiment}: Construct a correlation heatmap comparing the columns
of the matrix.

\item \code{SummarizedExperiment}: Scale the heatmap by applying quantile breaks.
}}

\section{Scaling}{


Here we're scaling simply by calculating the standard score (z-score).
\itemize{
\item mu: mean.
\item sigma: standard deviation.
\item x: raw score (e.g. count matrix).
\item z: standard score (z-score).
}\preformatted{z = (x - mu) / sigma
}

See also:
\itemize{
\item \code{pheatmap:::scale_rows()}.
\item \code{scale()} for additional scaling approaches.
}
}

\section{Hierarchical clustering}{


Row- and column-wise hierarchical clustering is performed when \code{clusterRows}
and/or \code{clusterCols} are set to \code{TRUE}. Internally, this calls
\code{\link[stats:hclust]{stats::hclust()}}, and defaults to the Ward method.

Automatic hierarchical clustering of rows and/or columns can error for some
datasets. When this occurs, you'll likely see this error:\preformatted{Error in hclust(d, method = method) :
NA/NaN/Inf in foreign function call
}

In this case, either set \code{clusterRows} and/or \code{clusterCols} to \code{FALSE}, or
you can attempt to pass an \code{hclust} object to these arguments. This is
recommended as an alternate approach to be used with \code{\link[pheatmap:pheatmap]{pheatmap::pheatmap()}},
which is called internally by our plotting code. Here's how this can be
accomplished:\preformatted{mat <- assay(mat)
dist <- dist(mat)
hclust <- hclust(dist, method = "ward.D2")
}
}

\examples{
data(rse, sce)

## SummarizedExperiment ====
plotHeatmap(rse)
plotCorrelationHeatmap(rse)
plotQuantileHeatmap(rse)

## Disable column clustering.
plotHeatmap(rse, clusterCols = FALSE)

## Using pheatmap default colors.
plotHeatmap(rse, color = NULL, legendColor = NULL)

## Using hexadecimal color input.
library(RColorBrewer)
purple_orange <- colorRampPalette(brewer.pal(n = 11L, name = "PuOr"))(256L)
plotHeatmap(rse, color = purple_orange)

## SingleCellExperiment ====
plotHeatmap(sce)
plotCorrelationHeatmap(sce)
plotQuantileHeatmap(sce)
}
\seealso{
\itemize{
\item \code{pheatmap::pheatmap()}.
\item \code{RColorBrewer::brewer.pal()}.
\item \code{stats::cor()}.
\item \code{stats::hclust()}.
}
}
\author{
Michael Steinbaugh, Rory Kirchner
}
