% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/all_generics.R, R/methods-tidy.R, R/reexports.R
\docType{methods}
\name{arrange}
\alias{arrange}
\alias{as_tibble}
\alias{filter}
\alias{gene2entrez}
\alias{gene2symbol}
\alias{mutate}
\alias{tx2gene}
\alias{arrange,data.frame-method}
\alias{.asTibble}
\alias{as_tibble,data.frame-method}
\alias{as_tibble,DataFrame-method}
\alias{as_tibble,matrix-method}
\alias{content,response-method}
\alias{expand,data.frame-method}
\alias{filter,data.frame-method}
\alias{first,data.frame-method}
\alias{intersect,data.frame,data.frame-method}
\alias{mutate,data.frame-method}
\alias{rename,data.frame-method}
\alias{select,data.frame-method}
\alias{setdiff,data.frame,data.frame-method}
\alias{setequal,data.frame,data.frame-method}
\alias{union,data.frame,data.frame-method}
\alias{select}
\alias{content}
\alias{intersect}
\alias{setdiff}
\alias{union}
\alias{tidy_select}
\alias{expand}
\alias{first}
\alias{rename}
\title{\href{http://tidyverse.org/}{tidyverse} S4 Methods}
\usage{
arrange(object, ...)

as_tibble(from)

filter(object, ...)

gene2entrez(object)

gene2symbol(object)

mutate(object, ...)

tx2gene(object)

\S4method{arrange}{data.frame}(object, ...)

\S4method{as_tibble}{data.frame}(from)

\S4method{as_tibble}{DataFrame}(from)

\S4method{as_tibble}{matrix}(from)

\S4method{content}{response}(object)

\S4method{expand}{data.frame}(x, ...)

\S4method{filter}{data.frame}(object, ...)

\S4method{first}{data.frame}(x, ...)

\S4method{intersect}{data.frame,data.frame}(x, y, ...)

\S4method{mutate}{data.frame}(object, ...)

\S4method{rename}{data.frame}(x, ...)

\S4method{setdiff}{data.frame,data.frame}(x, y, ...)

\S4method{setequal}{data.frame,data.frame}(x, y)

\S4method{union}{data.frame,data.frame}(x, y, ...)

select(x, keys, columns, keytype, ...)

content(object)

intersect(x, y, ...)

setdiff(x, y, ...)

union(x, y, ...)

tidy_select(.data, ...)

expand(x, ...)

first(x, ...)

rename(x, ...)
}
\arguments{
\item{object}{Object.}

\item{...}{Additional arguments.}

\item{from}{Object to coerce.}

\item{x}{Primary object.}

\item{y}{Secondary object.}

\item{keys}{the keys to select records for from the database.  All possible 
    keys are returned by using the \code{keys} method.}

\item{columns}{the columns or kinds of things that can be retrieved
    from the database.  As with \code{keys}, all possible columns are
    returned by using the \code{columns} method.}

\item{keytype}{the keytype that matches the keys used.  For the
    \code{select} methods, this is used to indicate the kind of ID being used
    with the keys argument. For the \code{keys} method this is used to
    indicate which kind of keys are desired from \code{keys}
  }

\item{.data}{Data object.}
}
\description{
Avoid \code{NAMESPACE} collisions with
\href{https://www.bioconductor.org/}{Bioconductor} generics by using \code{\link[=setMethod]{setMethod()}}
to relevant \code{signature}.
}
\note{
For tibble coercion with \code{\link[=as]{as()}} or \code{\link[=as_tibble]{as_tibble()}}, rownames are always
moved to the \code{rowname} column, using \code{\link[=rownames_to_column]{rownames_to_column()}} internally.
This provides more consistent behavior in the tidyverse, which can
inadvertently strip rownames during filtering operations.
}
\seealso{
\itemize{
\item \href{https://www.bioconductor.org/}{Bioconductor}:
\link{Biobase}, \link{BiocGenerics}, S4Vectors.
\item \href{http://tidyverse.org/}{tidyverse}:
\link{dplyr}, \link{httr}, \link{tidyr}.
}
}
