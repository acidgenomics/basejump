% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/setArgsToDoCall.R
\name{setArgsToDoCall}
\alias{setArgsToDoCall}
\title{Set Arguments to Do Call}
\usage{
setArgsToDoCall(args, removeArgs = NULL, call = sys.call(which =
  sys.parent()), fun = sys.function(which = sys.parent()),
  verbose = FALSE)
}
\arguments{
\item{args}{
    The default method expects a \emph{list} of arguments to the function
    call (the \code{names} attribute of \code{args} gives the argument names).
    See \code{?base::\link[base]{do.call}} for the details.
    
    Specific methods can support other objects.
    Please refer to the documentation of a particular method for the details.
  }

\item{removeArgs}{\code{character}. Names of arguments to remove from \code{call}
and/or \code{fun} returns before passing to \code{do.call()}.}

\item{call}{\code{call}. Call to match against. This argument needs to be changed
when called inside an S4 method.}

\item{fun}{\code{function}. Function containing the \code{\link[=do.call]{do.call()}} call. Recommended
to leave unchanged by default.}

\item{verbose}{\code{boolean}. Run the function with verbose messages? It is only
recommended to enable this when debugging.}
}
\value{
\code{list}. Arguments to pass to \code{\link[=do.call]{do.call()}}.
}
\description{
Set Arguments to Do Call
}
\examples{
example <- function(object, xxx, ...) {
    args <- setArgsToDoCall(
        args = list(
            object = object,
            collapse = " "
        ),
        removeArgs = "xxx",
        verbose = TRUE
    )
    do.call(what = paste, args = args)
}
example(c("hello", "world"))
}
\seealso{
Other Developer Functions: \code{\link{cleanSystemLibrary}},
  \code{\link{detectHPC}}, \code{\link{dots}},
  \code{\link{flatFiles}},
  \code{\link{initializeDirectory}},
  \code{\link{localOrRemoteFile}}, \code{\link{matchCall}},
  \code{\link{matchInterestingGroups}},
  \code{\link{methodFormals}},
  \code{\link{multiassignAsEnvir}},
  \code{\link{printString}},
  \code{\link{uniteInterestingGroups}}
}
\author{
Michael Steinbaugh
}
\concept{Developer Functions}
