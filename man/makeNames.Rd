% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AllGenerics.R, R/methods-makeNames.R
\docType{methods}
\name{camel}
\alias{camel}
\alias{dotted}
\alias{snake}
\alias{makeNames}
\alias{dotted,ANY-method}
\alias{dotted,character-method}
\alias{dotted,data.frame-method}
\alias{dotted,list-method}
\alias{dotted,matrix-method}
\alias{dotted,tbl_df-method}
\alias{camel,ANY-method}
\alias{camel,character-method}
\alias{camel,data.frame-method}
\alias{camel,list-method}
\alias{camel,matrix-method}
\alias{camel,tbl_df-method}
\alias{snake,ANY-method}
\alias{snake,character-method}
\alias{snake,data.frame-method}
\alias{snake,list-method}
\alias{snake,matrix-method}
\alias{snake,tbl_df-method}
\title{Make Syntactically Valid Names}
\usage{
camel(object, ...)

dotted(object, ...)

snake(object, ...)

\S4method{dotted}{ANY}(object, rownames = FALSE)

\S4method{dotted}{character}(object)

\S4method{dotted}{data.frame}(object, rownames = FALSE)

\S4method{dotted}{list}(object)

\S4method{dotted}{matrix}(object, rownames = FALSE)

\S4method{dotted}{tbl_df}(object)

\S4method{camel}{ANY}(object, rownames = FALSE)

\S4method{camel}{character}(object)

\S4method{camel}{data.frame}(object, rownames = FALSE)

\S4method{camel}{list}(object)

\S4method{camel}{matrix}(object, rownames = FALSE)

\S4method{camel}{tbl_df}(object)

\S4method{snake}{ANY}(object, rownames = FALSE)

\S4method{snake}{character}(object)

\S4method{snake}{data.frame}(object, rownames = FALSE)

\S4method{snake}{list}(object)

\S4method{snake}{matrix}(object, rownames = FALSE)

\S4method{snake}{tbl_df}(object)
}
\arguments{
\item{object}{Character vector or an object for which \code{\link[=names]{names()}} assignment
will be meaningful.}

\item{...}{Additional arguments.}

\item{rownames}{Include row names.}
}
\value{
Object with syntatically valid names. For objects supporting
\code{\link[base:names]{base::names()}}, the underlying data returns unchanged.
}
\description{
These are convenience functions that sanitize names into \code{camelCase}
(\strong{preferred}), \code{snake_case}, or \code{dotted.case}.
}
\details{
For unnamed character vectors, these functions will sanitize the underlying
values. Otherwise, the functions will set \code{\link[=names]{names()}} and/or \code{\link[=rownames]{rownames()}} on
objects supporting name assignments. They return the object without
modification of the underlying data.
}
\note{
\code{dotted.case} support is provided for matching against base R
parameters, but we strongly advise against using it for object and/or
argument name assignments.
}
\examples{
# Unnamed character vector
unnamedVec <-
  c("hello world",
    "HELLO WORLD",
    "RNAi clones",
    "worfdbHTMLRemap",
    123,
    NA)

# Named character vector
namedVec <- c(Item.A = "hello world", Item.B = "HELLO WORLD")

# Data frame with colnames and rownames
df <- head(mtcars)

# Tibble, with colnames. Rownames aren't supported on these!
tbl <- head(starwars)

# List, with assigned names
lst <- list(Item.A = c(1, 2),
            Item.B = c(3, 4))


# camelCase
camel(unnamedVec)
camel(namedVec)
camel(df)
camel(df, rownames = TRUE)
camel(tbl)
camel(lst)


# snake_case
snake(unnamedVec)
snake(namedVec)
snake(df)
snake(df, rownames = TRUE)
snake(tbl)
snake(lst)


# dotted.case
dotted(unnamedVec)
dotted(namedVec)
dotted(df)
dotted(df, rownames = TRUE)
dotted(tbl)
dotted(lst)
}
\seealso{
Other Cleanup Utilities: \code{\link{fixNA}},
  \code{\link{removeNA}}, \code{\link{sortUnique}}

Other Cleanup Utilities: \code{\link{fixNA}},
  \code{\link{removeNA}}, \code{\link{sortUnique}}

Other Cleanup Utilities: \code{\link{fixNA}},
  \code{\link{removeNA}}, \code{\link{sortUnique}}
}
\concept{Cleanup Utilities}
