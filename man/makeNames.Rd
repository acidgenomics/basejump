% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/makeNames-methods.R
\docType{methods}
\name{makeNames}
\alias{makeNames}
\alias{makeDimnames}
\alias{camel,character-method}
\alias{dotted,character-method}
\alias{snake,character-method}
\alias{upperCamel,character-method}
\alias{camel,factor-method}
\alias{dotted,factor-method}
\alias{snake,factor-method}
\alias{upperCamel,factor-method}
\alias{camel,atomic-method}
\alias{dotted,atomic-method}
\alias{snake,atomic-method}
\alias{upperCamel,atomic-method}
\alias{camel,list-method}
\alias{dotted,list-method}
\alias{snake,list-method}
\alias{upperCamel,list-method}
\alias{camel,List-method}
\alias{dotted,List-method}
\alias{snake,List-method}
\alias{upperCamel,List-method}
\alias{camel,matrix-method}
\alias{dotted,matrix-method}
\alias{snake,matrix-method}
\alias{upperCamel,matrix-method}
\alias{camel,data.frame-method}
\alias{dotted,data.frame-method}
\alias{snake,data.frame-method}
\alias{upperCamel,data.frame-method}
\alias{camel,DataFrame-method}
\alias{dotted,DataFrame-method}
\alias{snake,DataFrame-method}
\alias{upperCamel,DataFrame-method}
\alias{camel,GRanges-method}
\alias{dotted,GRanges-method}
\alias{snake,GRanges-method}
\alias{upperCamel,GRanges-method}
\alias{camel,GRangesList-method}
\alias{dotted,GRangesList-method}
\alias{snake,GRangesList-method}
\alias{upperCamel,GRangesList-method}
\alias{camel,ANY-method}
\alias{dotted,ANY-method}
\alias{snake,ANY-method}
\alias{upperCamel,ANY-method}
\title{Make syntactically valid names}
\usage{
makeNames(names, unique = TRUE)

makeDimnames(object)

\S4method{camel}{character}(object, strict = FALSE)

\S4method{dotted}{character}(object)

\S4method{snake}{character}(object)

\S4method{upperCamel}{character}(object, strict = FALSE)

\S4method{camel}{factor}(object, strict = FALSE)

\S4method{dotted}{factor}(object)

\S4method{snake}{factor}(object)

\S4method{upperCamel}{factor}(object, strict = FALSE)

\S4method{camel}{atomic}(object, strict = FALSE)

\S4method{dotted}{atomic}(object)

\S4method{snake}{atomic}(object)

\S4method{upperCamel}{atomic}(object, strict = FALSE)

\S4method{camel}{list}(object, strict = FALSE)

\S4method{dotted}{list}(object)

\S4method{snake}{list}(object)

\S4method{upperCamel}{list}(object, strict = FALSE)

\S4method{camel}{List}(object, strict = FALSE)

\S4method{dotted}{List}(object)

\S4method{snake}{List}(object)

\S4method{upperCamel}{List}(object, strict = FALSE)

\S4method{camel}{matrix}(object, rownames = FALSE, colnames = TRUE,
  strict = FALSE)

\S4method{dotted}{matrix}(object, rownames = FALSE, colnames = TRUE)

\S4method{snake}{matrix}(object, rownames = FALSE, colnames = TRUE)

\S4method{upperCamel}{matrix}(object, rownames = FALSE,
  colnames = TRUE, strict = FALSE)

\S4method{camel}{data.frame}(object, rownames = FALSE, colnames = TRUE,
  strict = FALSE)

\S4method{dotted}{data.frame}(object, rownames = FALSE,
  colnames = TRUE)

\S4method{snake}{data.frame}(object, rownames = FALSE, colnames = TRUE)

\S4method{upperCamel}{data.frame}(object, rownames = FALSE,
  colnames = TRUE, strict = FALSE)

\S4method{camel}{DataFrame}(object, rownames = FALSE, colnames = TRUE,
  strict = FALSE)

\S4method{dotted}{DataFrame}(object, rownames = FALSE, colnames = TRUE)

\S4method{snake}{DataFrame}(object, rownames = FALSE, colnames = TRUE)

\S4method{upperCamel}{DataFrame}(object, rownames = FALSE,
  colnames = TRUE, strict = FALSE)

\S4method{camel}{GRanges}(object, strict = FALSE)

\S4method{dotted}{GRanges}(object)

\S4method{snake}{GRanges}(object)

\S4method{upperCamel}{GRanges}(object, strict = FALSE)

\S4method{camel}{GRangesList}(object, strict = FALSE)

\S4method{dotted}{GRangesList}(object)

\S4method{snake}{GRangesList}(object)

\S4method{upperCamel}{GRangesList}(object, strict = FALSE)

\S4method{camel}{ANY}(object, rownames = FALSE, colnames = TRUE,
  strict = FALSE)

\S4method{dotted}{ANY}(object, rownames = FALSE, colnames = TRUE)

\S4method{snake}{ANY}(object, rownames = FALSE, colnames = TRUE)

\S4method{upperCamel}{ANY}(object, rownames = FALSE, colnames = TRUE,
  strict = FALSE)
}
\arguments{
\item{names}{character vector to be coerced to syntactically valid
   names.  This is coerced to character if necessary.}

\item{unique}{logical; if \code{TRUE}, the resulting elements are
     unique.  This may be desired for, e.g., column names.}

\item{object}{\code{character} or class supporting \code{names}.}

\item{strict}{\code{logical(1)}.
Enforce strict name sanitization. When \code{TRUE}, this does not allow the
return of any capitalized acronyms. "RNA" will become "Rna", for example.}

\item{rownames}{\code{logical(1)}.
Apply sanitization on row names. This is not generally recommended by
default, since rownames commonly contain gene identifiers that should not
be modified.}

\item{colnames}{\code{logical(1)}.
Apply sanitization on column names. This is generally recommended by
default.}
}
\value{
Modified object.
Contains syntatically valid names. For objects supporting \code{names}, the
underlying data returns unchanged.
}
\description{
For \code{atomic} vectors, these functions will sanitize the values. Otherwise,
they will set \code{names}, \code{rownames}, and/or \code{colnames} without
modification of the values.
}
\details{
\code{dotted.case} support is provided for matching against base R parameters.
However, it is recommended to avoid using it for variable assignments into an
\code{environment}, as that can introduce conflicts with base functions.
}
\note{
\code{makeNames} sanitizes names using underscores instead of dots, the
convention used by \code{make.names}.
}
\examples{
loadRemoteData(url = file.path(basejumpCacheURL, "mn.rda"))

## character ====
x <- mn$character
print(x)
camel(x)
dotted(x)
snake(x)
upperCamel(x)
makeNames(x)

x <- mn$namedCharacter
print(x)
camel(x)
dotted(x)
snake(x)
upperCamel(x)
makeNames(x)

## factor ====
x <- mn$factor
print(x)
camel(x)
dotted(x)
snake(x)
upperCamel(x)
makeNames(x)

## data.frame ====
x <- datasets::USArrests
dimnames(x)
camel(x, rownames = TRUE, colnames = TRUE) \%>\% dimnames()
dotted(x, rownames = TRUE, colnames = TRUE) \%>\% dimnames()
snake(x, rownames = TRUE, colnames = TRUE) \%>\% dimnames()
upperCamel(x, rownames = TRUE, colnames = TRUE) \%>\% dimnames()

## list ====
x <- mn$list
print(x)
camel(x) \%>\% names()
dotted(x) \%>\% names()
snake(x) \%>\% names()
upperCamel(x) \%>\% names()
}
\seealso{
\itemize{
\item \code{make.names}.
\item \href{https://cran.r-project.org/package=janitor}{janitor} contains a number of
useful functions that provide similar sanitization support, but isn't
designed to work natively with \href{https://bioconductor.org}{Bioconductor} and
S4 object classes.
\item \href{https://cran.r-project.org/package=lettercase}{lettercase}.
\item \href{https://tazinho.github.io/snakecase}{snakecase}.
}
}
