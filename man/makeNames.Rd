% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AllGenerics.R, R/methods-makeNames.R
\docType{methods}
\name{camel}
\alias{camel}
\alias{dotted}
\alias{snake}
\alias{upperCamel}
\alias{makeNames}
\alias{makeNames}
\alias{camel,ANY-method}
\alias{dotted,ANY-method}
\alias{snake,ANY-method}
\alias{upperCamel,ANY-method}
\alias{camel,character-method}
\alias{dotted,character-method}
\alias{snake,character-method}
\alias{upperCamel,character-method}
\alias{camel,factor-method}
\alias{dotted,factor-method}
\alias{snake,factor-method}
\alias{upperCamel,factor-method}
\alias{camel,matrix-method}
\alias{dotted,matrix-method}
\alias{snake,matrix-method}
\alias{upperCamel,matrix-method}
\alias{camel,data.frame-method}
\alias{dotted,data.frame-method}
\alias{snake,data.frame-method}
\alias{upperCamel,data.frame-method}
\alias{camel,DataFrame-method}
\alias{dotted,DataFrame-method}
\alias{snake,DataFrame-method}
\alias{upperCamel,DataFrame-method}
\alias{camel,GRanges-method}
\alias{dotted,GRanges-method}
\alias{snake,GRanges-method}
\alias{upperCamel,GRanges-method}
\alias{camel,list-method}
\alias{dotted,list-method}
\alias{snake,list-method}
\alias{upperCamel,list-method}
\alias{camel,List-method}
\alias{dotted,List-method}
\alias{snake,List-method}
\alias{upperCamel,List-method}
\alias{camel,SimpleList-method}
\alias{dotted,SimpleList-method}
\alias{snake,SimpleList-method}
\alias{upperCamel,SimpleList-method}
\title{Make Syntactically Valid Names}
\usage{
camel(object, ...)

dotted(object, ...)

snake(object, ...)

upperCamel(object, ...)

makeNames(names, unique = FALSE)

\S4method{camel}{ANY}(object, strict = FALSE)

\S4method{dotted}{ANY}(object)

\S4method{snake}{ANY}(object, rownames = FALSE, colnames = TRUE)

\S4method{upperCamel}{ANY}(object, strict = FALSE)

\S4method{camel}{character}(object, strict = FALSE)

\S4method{dotted}{character}(object)

\S4method{snake}{character}(object)

\S4method{upperCamel}{character}(object, strict = FALSE)

\S4method{camel}{factor}(object, strict = FALSE)

\S4method{dotted}{factor}(object)

\S4method{snake}{factor}(object)

\S4method{upperCamel}{factor}(object, strict = FALSE)

\S4method{camel}{matrix}(object, rownames = FALSE, colnames = TRUE,
  strict = FALSE)

\S4method{dotted}{matrix}(object, rownames = FALSE, colnames = TRUE)

\S4method{snake}{matrix}(object, rownames = FALSE, colnames = TRUE)

\S4method{upperCamel}{matrix}(object, rownames = FALSE, colnames = TRUE,
  strict = FALSE)

\S4method{camel}{data.frame}(object, rownames = FALSE, colnames = TRUE,
  strict = FALSE)

\S4method{dotted}{data.frame}(object, rownames = FALSE, colnames = TRUE)

\S4method{snake}{data.frame}(object, rownames = FALSE, colnames = TRUE)

\S4method{upperCamel}{data.frame}(object, rownames = FALSE, colnames = TRUE,
  strict = FALSE)

\S4method{camel}{DataFrame}(object, rownames = FALSE, colnames = TRUE,
  strict = FALSE)

\S4method{dotted}{DataFrame}(object, rownames = FALSE, colnames = TRUE)

\S4method{snake}{DataFrame}(object, rownames = FALSE, colnames = TRUE)

\S4method{upperCamel}{DataFrame}(object, rownames = FALSE, colnames = TRUE,
  strict = FALSE)

\S4method{camel}{GRanges}(object, strict = FALSE)

\S4method{dotted}{GRanges}(object)

\S4method{snake}{GRanges}(object)

\S4method{upperCamel}{GRanges}(object, strict = FALSE)

\S4method{camel}{list}(object, strict = FALSE)

\S4method{dotted}{list}(object)

\S4method{snake}{list}(object)

\S4method{upperCamel}{list}(object, strict = FALSE)

\S4method{camel}{List}(object, strict = FALSE)

\S4method{dotted}{List}(object)

\S4method{snake}{List}(object)

\S4method{upperCamel}{List}(object, strict = FALSE)

\S4method{camel}{SimpleList}(object, strict = FALSE)

\S4method{dotted}{SimpleList}(object)

\S4method{snake}{SimpleList}(object)

\S4method{upperCamel}{SimpleList}(object, strict = FALSE)
}
\arguments{
\item{object}{Character vector or an object for which \code{\link[=names]{names()}} assignment
will be meaningful.}

\item{...}{Additional arguments.}

\item{names}{\code{atomic} to be coerced to syntactically valid names. Will be
coerced to \code{character} if necessary.}

\item{unique}{\code{logical}; if \code{TRUE}, the resulting elements are unique.}

\item{strict}{Enforce strict name sanitization. When \code{TRUE}, this does not
allow the return of any capitalized acronyms. "RNA" will become "Rna", for
example.}

\item{rownames}{Apply sanitization on row names. This is not recommended
by default, since rownames commonly contain gene identifiers that should
not be modified.}

\item{colnames}{Apply sanitization on column names. This is generally
recommended by default.}
}
\value{
Object with syntatically valid names. For objects supporting
\code{\link[=names]{names()}}, the underlying data returns unchanged.
}
\description{
For \code{atomic} vectors, these functions will sanitize the values. Otherwise,
they will set \code{\link[=names]{names()}}, \code{\link[=rownames]{rownames()}}, and/or \code{\link[=colnames]{colnames()}} without
modification of the values.
}
\note{
\code{dotted.case} support is provided for matching against base R
parameters. However, it is recommended to avoid using it for variable
assignments into an \code{environment}, as that can introduce conflicts with
base functions.

\code{\link[=makeNames]{makeNames()}} sanitizes names using underscore instead of dot, which is
the convention used by \code{\link[=make.names]{make.names()}}.
}
\examples{
load(system.file("extdata/mn.rda", package = "basejump"))

# character ====
x <- mn$character
print(x)
camel(x)
dotted(x)
snake(x)
upperCamel(x)
makeNames(x)

x <- mn$namedCharacter
print(x)
camel(x)
dotted(x)
snake(x)
upperCamel(x)
makeNames(x)

# factor ====
x <- mn$factor
print(x)
camel(x)
dotted(x)
snake(x)
upperCamel(x)
makeNames(x)

# data.frame ====
x <- mn$dataFrame
print(x)

camel(x, rownames = FALSE)
camel(x, rownames = TRUE)

dotted(x, rownames = FALSE)
dotted(x, rownames = TRUE)

snake(x, rownames = FALSE)
snake(x, rownames = TRUE)

upperCamel(x, rownames = FALSE)
upperCamel(x, rownames = TRUE)

# list ====
x <- mn$list
print(x)
camel(x)
dotted(x)
snake(x)
upperCamel(x)
}
\seealso{
\code{\link[=make.names]{make.names()}}.
}
\author{
Michael Steinbaugh
}
