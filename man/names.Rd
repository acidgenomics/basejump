% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/all_generics.R, R/names.R, R/zzz.R
\docType{methods}
\name{camel}
\alias{camel}
\alias{dotted}
\alias{firstCase}
\alias{snake}
\alias{titleCase}
\alias{.checkNames}
\alias{.checkRownames}
\alias{.makeNamesDotted}
\alias{.setNamesDotted}
\alias{dotted,ANY-method}
\alias{dotted,character-method}
\alias{dotted,data.frame-method}
\alias{dotted,list-method}
\alias{dotted,matrix-method}
\alias{dotted,tbl_df-method}
\alias{.makeNamesCamel}
\alias{.setNamesCamel}
\alias{camel,ANY-method}
\alias{camel,character-method}
\alias{camel,data.frame-method}
\alias{camel,list-method}
\alias{camel,matrix-method}
\alias{camel,tbl_df-method}
\alias{.makeNamesSnake}
\alias{.setNamesSnake}
\alias{snake,ANY-method}
\alias{snake,character-method}
\alias{snake,data.frame-method}
\alias{snake,list-method}
\alias{snake,matrix-method}
\alias{snake,tbl_df-method}
\alias{.makeTitleCase}
\alias{titleCase,character-method}
\alias{.makeFirstCase}
\alias{firstCase,character-method}
\alias{first_case}
\alias{sanitizeNames}
\alias{sanitiseNames}
\alias{sanitize_names}
\alias{sanitise_names}
\alias{title_case}
\title{Make Syntactically Valid Names}
\usage{
camel(object, ...)

dotted(object, ...)

firstCase(object, ...)

snake(object, ...)

titleCase(object, ...)

\S4method{dotted}{ANY}(object, rownames = FALSE)

\S4method{dotted}{character}(object)

\S4method{dotted}{data.frame}(object, rownames = FALSE)

\S4method{dotted}{list}(object)

\S4method{dotted}{matrix}(object, rownames = FALSE)

\S4method{dotted}{tbl_df}(object)

\S4method{camel}{ANY}(object, rownames = FALSE)

\S4method{camel}{character}(object)

\S4method{camel}{data.frame}(object, rownames = FALSE)

\S4method{camel}{list}(object)

\S4method{camel}{matrix}(object, rownames = FALSE)

\S4method{camel}{tbl_df}(object)

\S4method{snake}{ANY}(object, rownames = FALSE)

\S4method{snake}{character}(object)

\S4method{snake}{data.frame}(object, rownames = FALSE)

\S4method{snake}{list}(object)

\S4method{snake}{matrix}(object, rownames = FALSE)

\S4method{snake}{tbl_df}(object)

\S4method{titleCase}{character}(object)

\S4method{firstCase}{character}(object)
}
\arguments{
\item{object}{Character vector or an object for which \code{\link[=names]{names()}} assignment
will be meaningful.}

\item{...}{Additional arguments.}

\item{rownames}{Include row names.}
}
\value{
Object with syntatically valid names. For objects supporting
\code{\link[base:names]{base::names()}}, the underlying data returns unchanged.
}
\description{
These are convenience functions that sanitize names into \code{camelCase}
(\strong{preferred}), \code{snake_case}, or \code{dotted.case}. \code{dotted.case} support is
provided for matching against base R parameters, but we strongly advise
against using it for object and/or argument name assignments.
}
\details{
For unnamed character vectors, these functions will sanitize the underlying
values. Otherwise, the functions will set \code{\link[=names]{names()}} and/or \code{\link[=rownames]{rownames()}} on
objects supporting name assignments. They return the object without
modification of the underlying data.
}
\examples{
# Unnamed character vector, with no names assigned
unnamed_vec <-
  c("hello world",
    "HELLO WORLD",
    "RNAi clones",
    "worfdbHTMLRemap",
    123,
    NA)

# Named character vector
named_vec <- c(Item.A = "hello world", Item.B = "HELLO WORLD")

# Data frame with colnames and rownames
df <- head(mtcars)

# Tibble, with colnames. Rownames aren't supported on these!
tbl <- head(starwars)

# List, with assigned namess
lst <- list(Item.A = c(1, 2),
            Item.B = c(3, 4))


# camelCase
camel(unnamed_vec)
camel(named_vec)
camel(df)
camel(df, rownames = TRUE)
camel(tbl)
camel(lst)


# snake_case
snake(unnamed_vec)
snake(named_vec)
snake(df)
snake(df, rownames = TRUE)
snake(tbl)
snake(lst)


# dotted.case
dotted(unnamed_vec)
dotted(named_vec)
dotted(df)
dotted(df, rownames = TRUE)
dotted(tbl)
dotted(lst)
}
