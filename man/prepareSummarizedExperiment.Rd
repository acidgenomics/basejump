% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AllGenerics.R,
%   R/methods-prepareSummarizedExperiment.R
\docType{methods}
\name{prepareSummarizedExperiment}
\alias{prepareSummarizedExperiment}
\alias{prepareSummarizedExperiment,ANY-method}
\alias{prepareSummarizedExperiment,data.frame-method}
\alias{prepareSummarizedExperiment,dgCMatrix-method}
\alias{prepareSummarizedExperiment,list-method}
\alias{prepareSummarizedExperiment,matrix-method}
\alias{prepareSummarizedExperiment,SimpleList-method}
\title{Prepare SummarizedExperiment}
\usage{
prepareSummarizedExperiment(object, ...)

\S4method{prepareSummarizedExperiment}{ANY}(object, rowData, colData,
  metadata = NULL)

\S4method{prepareSummarizedExperiment}{data.frame}(object, rowData, colData,
  metadata = NULL)

\S4method{prepareSummarizedExperiment}{dgCMatrix}(object, rowData, colData,
  metadata = NULL)

\S4method{prepareSummarizedExperiment}{list}(object, rowData, colData,
  metadata = NULL)

\S4method{prepareSummarizedExperiment}{matrix}(object, rowData, colData,
  metadata = NULL)

\S4method{prepareSummarizedExperiment}{SimpleList}(object, rowData, colData,
  metadata = NULL)
}
\arguments{
\item{object}{Object supporting dimensions (\code{\link[base:dim]{base::dim()}}), or a list
containing valid objects. For NGS experiments, a counts matrix is
recommended, and can be passed in either dense (\code{matrix}) or sparse
(\code{dgCMatrix}, \code{dgTMatrix}) format. Multiple matrices can be supplied as a
list, as long as they all have the same dimensions. List object can be
supplied as either class \code{list} or \code{SimpleList}.}

\item{...}{\emph{Additional arguments (for the S4 generic definition).}}

\item{rowData}{Object describing assay matrix rows. Must support
\code{\link[base:dim]{base::dim()}}.}

\item{colData}{Object describing assay matrix columns. Must support
\code{\link[base:dim]{base::dim()}}.}

\item{metadata}{\emph{Optional}. Metadata list.}
}
\value{
\link{SummarizedExperiment}.
}
\description{
This is a utility wrapper for \code{SummarizedExperiment()} that provides
automatic subsetting for \code{colData} and \code{rowData}.
}
\details{
\code{prepareSummarizedExperiment()} also provides automatic metadata slotting of
multiple useful environment parameters:
\itemize{
\item \code{date}: Today's date.
\item \code{wd}: Working directory.
\item \code{sessionInfo}: R session information.
}
}
\examples{
mat <- matrix(
    seq(1L:16L),
    nrow = 4L,
    ncol = 4L,
    dimnames = list(
        c("gene_1", "gene_2", "gene_3", "gene_4"),
        c("sample_1", "sample_2", "sample_3", "sample_4")))
rowData <- data.frame(
    ensgene = c("Aaa", "Bbb", "Ccc", "Ddd"),
    biotype = c("coding", "coding", "coding", "pseudogene"),
    row.names = rownames(mat))
colData <- data.frame(
    genotype = c("wt", "wt", "ko", "ko"),
    age = c(3L, 6L, 3L, 6L),
    row.names = colnames(mat))
prepareSummarizedExperiment(
    mat,
    rowData = rowData,
    colData = colData)
}
\seealso{
\itemize{
\item \code{\link[SummarizedExperiment:SummarizedExperiment]{SummarizedExperiment::SummarizedExperiment()}}.
\item \code{\link[base:Sys.Date]{base::Sys.Date()}}.
\item \code{\link[base:getwd]{base::getwd()}}.
\item \code{\link[utils:sessionInfo]{utils::sessionInfo()}}.
}

Other Data Import and Project Utilities: \code{\link{loadRemoteData}},
  \code{\link{readFileByExtension}}, \code{\link{readGTF}},
  \code{\link{readYAML}}, \code{\link{transmit}}
}
\concept{Data Import and Project Utilities}
